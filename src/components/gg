export default {
  data () {
    return {
      previous: '',
      current: '0',
      operatorClicked: false,
      operator: null
    }
  },
  methods: {
    percent () {
      this.current = `${parseFloat(this.current) / 100}`
    },
    clear () {
      this.current = ''
    },
    del () {
      this.current = this.current.slice(1)
    },
    inverse () {
      this.current = 1 / this.current
    },
    square () {
      this.current *= this.current
    },
    sign () {
      if (this.current === '0') {
        return this.current
      }
      this.current = this.current.charAt(0) === '-'
        ? this.current.slice(1) : `-${this.current}`
    },
    value (n) {
      if (this.current.indexOf(0) === 0) {
        this.current = `${n}`
      }
      if (this.operatorClicked) {
        this.current = ''
        this.operatorClicked = false
      }
      this.current = `${this.current}${n}`
    },
    dot () {
      if (this.current.indexOf('.') === -1) {
        this.value('.')
      }
    },
    setPrevious () {
      this.previous = this.current
      this.operatorClicked = true
    },
    divide () {
      this.operator = (a, b) => a / b
      this.setPrevious()
      console.log('john')
    },
    times () {
      this.operator = (a, b) => a * b
      this.setPrevious()
    },
    minus () {
      this.operator = (a, b) => a - b
      this.setPrevious()
    },
    add () {
      this.operator = (a, b) => a + b
      this.setPrevious()
      if (this.operatorClicked) {
        this.equal()
      }
    },
    equal () {
      this.current = `${this.operator(
        parseFloat(this.previous),
        parseFloat(this.current)
      )}`
      this.previous = null
    }
  }